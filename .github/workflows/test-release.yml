name: Release (TestPyPI)
on:
  workflow_dispatch:

jobs:
  # 3.8 builds
  build-38-windows:
    uses: ./.github/workflows/build-windows.yml
    with:
      python-version: '3.8'

  build-38-linux:
    uses: ./.github/workflows/build-linux.yml
    with:
      python-version: '3.8'

  build-38-macos:
    uses: ./.github/workflows/build-macos.yml
    with:
      python-version: '3.8'

  # 3.9 builds
  build-39-windows:
    uses: ./.github/workflows/build-windows.yml
    with:
      python-version: '3.9'

  build-39-linux:
    uses: ./.github/workflows/build-linux.yml
    with:
      python-version: '3.9'

  build-39-macos:
    uses: ./.github/workflows/build-macos.yml
    with:
      python-version: '3.9'

  # 3.10 builds
  build-310-windows:
    uses: ./.github/workflows/build-windows.yml
    with:
      python-version: '3.10'

  build-310-linux:
    uses: ./.github/workflows/build-linux.yml
    with:
      python-version: '3.10'

  build-310-macos:
    uses: ./.github/workflows/build-macos.yml
    with:
      python-version: '3.10'

  # 3.11 builds
  build-311-windows:
    uses: ./.github/workflows/build-windows.yml
    with:
      python-version: '3.11'

  build-311-linux:
    uses: ./.github/workflows/build-linux.yml
    with:
      python-version: '3.11'

  build-311-macos:
    uses: ./.github/workflows/build-macos.yml
    with:
      python-version: '3.11'

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: python -m pip install build
      - run: python -m build --sdist
      - run: echo "SDIST_NAME=$(basename $(ls dist/*.tar.gz))" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.SDIST_NAME }}
          path: dist/${{ env.SDIST_NAME }}

  upload:
    needs:
      - build-38-windows
      - build-38-linux
      - build-38-macos
      - build-39-windows
      - build-39-linux
      - build-39-macos
      - build-310-windows
      - build-310-linux
      - build-310-macos
      - build-311-windows
      - build-311-linux
      - build-311-macos
      - build-sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
      - name: Artifacts tree structure
        run: ls -R
      - run: python -m pip install twine
      - run: python -m twine upload -r testpypi **/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}
